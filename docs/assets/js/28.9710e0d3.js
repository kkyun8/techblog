(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{227:function(t,a,s){"use strict";s.r(a);var e=s(28),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"unit-test"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unit-test"}},[t._v("#")]),t._v(" Unit Test")]),t._v(" "),s("h3",{attrs:{id:"code-coverage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#code-coverage"}},[t._v("#")]),t._v(" Code Coverage")]),t._v(" "),s("p",[t._v("十分にテストを行ったのか、数値で確認できる物。\n文字通り、どのぐらいコードをカバーしたのか？（実行されたのか）が数字でわかる")]),t._v(" "),s("h3",{attrs:{id:"stub"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stub"}},[t._v("#")]),t._v(" Stub")]),t._v(" "),s("p",[t._v("Stub は検証に使う物、指定した Object は必ずこの結果をリターンすることにする。")]),t._v(" "),s("h3",{attrs:{id:"mock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mock"}},[t._v("#")]),t._v(" Mock")]),t._v(" "),s("p",[t._v("Mock はテストのため、仮装の実行結果を作ること。")]),t._v(" "),s("p",[t._v("・Stub との違い\nMock は指定した Object のロジック（行動）を真似する\nStub はロジックなしで指定した結果をリターン（状態）すること。")]),t._v(" "),s("p",[t._v("例えば、JAVA で以下のことを実装したとしたら、")]),t._v(" "),s("p",[t._v("ログイン情報取得 -> バリデーションチェック -> DB でユーザー情報取得 -> 結果リターン")]),t._v(" "),s("p",[t._v("ここで 「DB でユーザー情報取得」は Mock で作成して、バリデーションチェックなどのテストを実装する")]),t._v(" "),s("h3",{attrs:{id:"spy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spy"}},[t._v("#")]),t._v(" Spy")]),t._v(" "),s("p",[t._v("特定のメソッドのみモックする\n・Mock との違い\nMock はクラスを丸々モックする物、Spy より上位")]),t._v(" "),s("h2",{attrs:{id:"junit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#junit"}},[t._v("#")]),t._v(" Junit")]),t._v(" "),s("h2",{attrs:{id:"jest"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jest"}},[t._v("#")]),t._v(" Jest")]),t._v(" "),s("h2",{attrs:{id:"sonarqube"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sonarqube"}},[t._v("#")]),t._v(" SonarQube")])])}),[],!1,null,null,null);a.default=r.exports}}]);